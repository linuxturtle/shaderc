.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.6.
.TH SHADERC "1" "July 2018" "shaderc" "glslc"
.SH NAME
shaderc \- glslc
.SH SYNOPSIS
.B glslc
[\fI\,options\/\fR] \fI\,file\/\fR...
.SH DESCRIPTION
glslc \- Compile shaders into SPIR\-V
.PP
An input file of \- represents standard input.
.SH OPTIONS
.TP
\fB\-c\fR
Only run preprocess, compile, and assemble steps.
.TP
\fB\-Dmacro\fR[=\fI\,defn\/\fR]
Add an implicit macro definition.
.TP
\fB\-E\fR
Outputs only the results of the preprocessing step.
Output defaults to standard output.
.TP
\fB\-fauto\-bind\-uniforms\fR
Automatically assign bindings to uniform variables that
don't have an explicit 'binding' layout in the shader
source.
.TP
\fB\-fauto\-map\-locations\fR
Automatically assign locations to uniform variables that
don't have an explicit 'location' layout in the shader
source.
.TP
\fB\-fhlsl\-iomap\fR
Use HLSL IO mappings for bindings.
.TP
\fB\-fhlsl_functionality1\fR, \fB\-fhlsl\-functionality1\fR
Enable extension SPV_GOOGLE_hlsl_functionality1 for HLSL
compilation.
.TP
\fB\-fimage\-binding\-base\fR [stage] <value>
Sets the lowest automatically assigned binding number for
images.  Optionally only set it for a single shader stage.
For HLSL, the resource register number is added to this
base.
.TP
\fB\-ftexture\-binding\-base\fR [stage] <value>
Sets the lowest automatically assigned binding number for
textures.  Optionally only set it for a single shader stage.
For HLSL, the resource register number is added to this
base.
.TP
\fB\-fsampler\-binding\-base\fR [stage] <value>
Sets the lowest automatically assigned binding number for
samplers  Optionally only set it for a single shader stage.
For HLSL, the resource register number is added to this
base.
.TP
\fB\-fubo\-binding\-base\fR [stage] <value>
Sets the lowest automatically assigned binding number for
uniform buffer objects (UBO).  Optionally only set it for
a single shader stage.
For HLSL, the resource register number is added to this
base.
.TP
\fB\-fcbuffer\-binding\-base\fR [stage] <value>
Same as \fB\-fubo\-binding\-base\fR.
.TP
\fB\-fssbo\-binding\-base\fR [stage] <value>
Sets the lowest automatically assigned binding number for
shader storage buffer objects (SSBO).  Optionally only set
it for a single shader stage.  Only affects GLSL.
.TP
\fB\-fuav\-binding\-base\fR [stage] <value>
For automatically assigned bindings for unordered access
views (UAV), the register number is added to this base to
determine the binding number.  Optionally only set it for
a single shader stage.  Only affects HLSL.
.TP
\fB\-fresource\-set\-binding\fR [stage] <reg0> <set0> <binding0>
[<reg1> <set1> <binding1>...]
.TP
Explicitly sets the descriptor set and binding for
HLSL resources, by register name.  Optionally restrict
it to a single stage.
.TP
\fB\-fentry\-point=\fR<name>
Specify the entry point name for HLSL compilation, for
all subsequent source files.  Default is "main".
.TP
\fB\-flimit=\fR<settings>
Specify resource limits. Each limit is specified by a limit
name followed by an integer value.  Tokens should be
separated by whitespace.  If the same limit is specified
several times, only the last setting takes effect.
.TP
\fB\-\-show\-limits\fR
Display available limit names and their default values.
.TP
\fB\-flimit\-file\fR <file>
Set limits as specified in the given file.
.TP
\fB\-fshader\-stage=\fR<stage>
Treat subsequent input files as having stage <stage>.
Valid stages are vertex, vert, fragment, frag, tesscontrol,
tesc, tesseval, tese, geometry, geom, compute, and comp.
.TP
\fB\-g\fR
Generate source\-level debug information.
Currently this option has no effect.
.TP
\fB\-\-help\fR
Display available options.
.TP
\fB\-\-version\fR
Display compiler version information.
.TP
\fB\-I\fR <value>
Add directory to include search path.
.TP
\fB\-o\fR <file>
Write output to <file>.
A file name of '\-' represents standard output.
.TP
\fB\-std=\fR<value>
Version and profile for GLSL input files. Possible values
are concatenations of version and profile, e.g. 310es,
450core, etc.  Ignored for HLSL files.
.TP
\fB\-mfmt=\fR<format>
Output SPIR\-V binary code using the selected format. This
option may be specified only when the compilation output is
in SPIR\-V binary code form. Available options include bin, c
and num. By default the binary output format is bin.
.TP
\fB\-M\fR
Generate make dependencies. Implies \fB\-E\fR and \fB\-w\fR.
.TP
\fB\-MM\fR
An alias for \fB\-M\fR.
.TP
\fB\-MD\fR
Generate make dependencies and compile.
.TP
\fB\-MF\fR <file>
Write dependency output to the given file.
.TP
\fB\-MT\fR <target>
Specify the target of the rule emitted by dependency
generation.
.TP
\fB\-S\fR
Only run preprocess and compilation steps.
.TP
\fB\-\-target\-env=\fR<environment>
Set the target client environment, and the semantics
of warnings and errors.  An optional suffix can specify
the client version.  Values are:
.TP
vulkan1.0
# The default
.TP
vulkan1.1
vulkan          # Same as vulkan1.0
opengl4.5
opengl          # Same as opengl4.5
.TP
\fB\-w\fR
Suppresses all warning messages.
.TP
\fB\-Werror\fR
Treat all warnings as errors.
.TP
\fB\-x\fR <language>
Treat subsequent input files as having type <language>.
Valid languages are: glsl, hlsl.
For files ending in .hlsl the default is hlsl.
Otherwise the default is glsl.
.TP
\fB\-fhlsl\-offsets\fR
Use HLSL offset rules for packing members of blocks.
Affects only GLSL.  HLSL rules are always used for HLSL.
.PP
spirv\-tools v2018.5\-dev e0c7f25465a93b0d294295515eb2e6e6157e94f7
glslang e0c7f25465a93b0d294295515eb2e6e6157e94f7
.PP
Target: SPIR\-V 1.0
