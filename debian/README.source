Versioning:
 The upstream repository does not contain any kind of tagging, but it does have
 a "CHANGES" file which contains pseudo-tags for presumed releases.  So the
 package versioning scheme is to take that tag, and append a "+<number of git
 commits since pseudo-tag was created>" to it.  The upstream version scheme
 appears to append a "-dev" while a release is under development, then remove it
 once the release is considered "done". So I've replaced the hyphen (-) with a
 tilde (~), to ensure continuity in debian release progression.

Source Prep:
 Upstream has a "known-good" branch, which only contains files that describe
 specific git commits of shaderc, as well as other dependencies, so a new
 release will be based off that branch.  Usually this will be done this way
 (assuming you have a remote called "google" in your git working directory):

 $ git co upstream-unstable
 $ git reset --hard google/known-good
 $ git co -b d-u
 $ git co debian-unstable -- debian .gitignore
 $ ./update_shaderc_sources.py
 $ dch --newversion "$(./debian/git-version.sh ./src/.git)-1"
 $ find src -name .git | xargs rm -fr
 $ git add .
 $ git ci -m "new release"
